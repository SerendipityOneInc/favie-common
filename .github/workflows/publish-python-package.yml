name: Publish Python Package

on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-alpha"
      - "v*.*.*-alpha.*"
      - "v*.*.*-beta"
      - "v*.*.*-beta.*"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Set version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        poetry version $VERSION
    - name: Configure Poetry
      run: |
        echo "Configuring Poetry for ${{ github.repository }}"
        poetry config repositories.github https://pypi.pkg.github.com/${{ github.repository }}
        poetry config http-basic.github __token__ ${{ secrets.GITHUB_TOKEN }}
    - name: Build and publish
      run: |
        poetry build
        echo "Publishing to GitHub Packages..."
        poetry publish -r github -vvv
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Debug information
      if: failure()
      run: |
        echo "GitHub Repository: ${{ github.repository }}"
        echo "Current working directory:"
        pwd
        echo "Directory contents:"
        ls -la
        echo "Poetry configuration:"
        poetry config --list
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/*.whl
        asset_name: ${{ github.event.repository.name }}-${{ github.ref_name }}.whl
        asset_content_type: application/octet-stream